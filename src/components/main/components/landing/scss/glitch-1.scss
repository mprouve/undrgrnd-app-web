@mixin glitchCopy {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch {
  /* Animation provies a slight random skew. Check bottom of doc
	for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;

  &::before {
    @include glitchCopy;
    // Scoots text slightly to the left for the color offset.
    left: 1px;
    // Creates the color 'shadow' that happens on the glitch.
    text-shadow: -1px 0 #000000;
    /* Creates an initial clip for our glitch. This works in
		a typical top,right,bottom,left fashion and creates a mask
		to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
		with an alternating animation to keep things fresh. */
    animation: glitch-anim 5s infinite linear alternate-reverse;
  }

  // Creates a copy after our text. Note comments from ::before.
  &::after {
    @include glitchCopy;
    left: -1px;
    text-shadow: -1px 0 #ff7700, 2px 2px #000000;
    animation: glitch-anim2 1s infinite linear alternate-reverse;
  }
}

@keyframes glitch-anim {
  $steps: 17;
  @for $i from 0 through $steps {
    #{percentage($i*(calc(1 / $steps)))} {
      clip: rect(random(1) + px, 9999px, random(200) + px, 0);
      transform: skew((calc(random(100) / 100)) + deg);
    }
  }
}

@keyframes glitch-anim2 {
  $steps: 17;
  @for $i from 0 through $steps {
    #{percentage($i*(calc(1 / $steps)))} {
      clip: rect(random(1) + px, 9999px, random(200) + px, 0);
      transform: skew((calc(random(100) / 100)) + deg);
    }
  }
}

@keyframes glitch-skew {
  $steps: 5;
  @for $i from 0 through $steps {
    #{percentage($i*(calc(1 / $steps)))} {
      transform: skew((random(2) - 2) + deg);
    }
  }
}
